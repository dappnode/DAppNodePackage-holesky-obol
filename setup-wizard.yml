version: "2"
fields:
  - id: config_mode
    title: Welcome to the Obol setup wizard
    description: |
      This wizard will guide you through the setup of the Obol DKG service. Please provide the necessary information to proceed.

      **READ BEFORE PROCEEDING**

      This package contains 5 instances of Obol, so you can run up to 5 clusters with different people. Each cluster will have its own configuration. You can have a Cluster being part of Lido's SDVTM and another one with your friends and up to 5 different clusters. Each cluster can handle hundreds of validators.
      
      It is **highly recommended** that you backup the package every time you make a change to the configuration of any of the clusters!

      ---

      **Config Mode**

      Select 'New cluster / Simple update' if this is your initial setup or if you are updating an existing setup.

      For importing configurations, choose 'URL' to specify definition file URLs or 'File' to upload a compressed file containing a node artifact. Select  'URL' for SDVTM. 

      Note file upload will not be available on config tab after install, but in the file manager tab.
    enum:
      - "New cluster / Simple update"
      - "URL"
      - "File"
    target:
      type: environment
      name: CONFIG_MODE
      service: cluster-1
    required: false

  - id: prometheus_monitored_charons
    title: Charons to monitor by Obol (optional)
    description: |
      Leave blank if you haven't been asked to do this.
      
      Comma separated list of charon services to monitor by Obol team for performance and reliability. The prometheus service will send the metrics to the server defined by the monitoring URL.

      Example: "1,2,3"
    target:
      type: environment
      name: CHARONS_TO_MONITOR
      service: prometheus
    required: false

  - id: prometheus_monitoring_url
    title: Prometheus Monitoring URL (optional)
    description: |
      Leave blank if you haven't been asked to do this.

      URL to send the monitoring metrics to. The server must be able to receive the metrics from the prometheus service.
    target:
      type: environment
      name: MONITORING_URL
      service: prometheus
    required: false

  - id: prometheus_monitoring_credentials
    title: Prometheus Monitoring Credentials (optional)
    description: |
      Credentials to authenticate the monitoring metrics sending to the server. Leave empty if you don't want to push any metrics.
    target:
      type: environment
      name: MONITORING_CREDENTIALS
      service: prometheus
    required: false

  - id: definition-file-url-1
    target:
      type: environment
      name: DEFINITION_FILE_URL
      service: cluster-1
    title: Definition File URL for DKG ceremony in cluster 1
    description: |
      If charon 1 is already registered as an operator for the DKG ceremony, provide the definition file URL here.
    required: false
    pattern: "(https?:\/\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\/\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})"
    patternErrorMessage: Must be a valid URL (https://api.obol.tech/dv/0xf...)
    if: { "config_mode": { "enum": ["URL"] } }

  - id: compressed-file-1
    target:
      type: fileUpload
      path: /import/
      service: cluster-1
    title: Compressed file with operator configuration for cluster 1
    description: |
      Provide here the operator 1 configuration generated by `charon create cluster` command in _.tar.xz_ , _.tar.gz_ or _.zip_ format.
    pattern: "(\\.tar.xz|\\.tar.gz|\\.zip)"
    required: false
    if: { "config_mode": { "enum": ["File"] } }

  - id: definition-file-url-2
    target:
      type: environment
      name: DEFINITION_FILE_URL
      service: cluster-2
    title: Definition File URL for DKG ceremony in cluster 2
    description: |
      If charon 2 is already registered as an operator for the DKG ceremony, provide the definition file URL here.
    required: false
    pattern: "(https?:\/\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\/\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})"
    patternErrorMessage: Must be a valid URL (https://api.obol.tech/dv/0xf...)
    if: { "config_mode": { "enum": ["URL"] } }

  - id: compressed-file-2
    target:
      type: fileUpload
      path: /import/
      service: cluster-2
    title: Compressed file with operator configuration for cluster 2
    description: |
      Provide here the operator 2 configuration generated by `charon create cluster` command in _.tar.xz_ , _.tar.gz_ or _.zip_ format.
    pattern: "(\\.tar.xz|\\.tar.gz|\\.zip)"
    required: false
    if: { "config_mode": { "enum": ["File"] } }

  - id: definition-file-url-3
    target:
      type: environment
      name: DEFINITION_FILE_URL
      service: cluster-3
    title: Definition File URL for DKG ceremony in cluster 3
    description: |
      If charon 3 is already registered as an operator for the DKG ceremony, provide the definition file URL here.
    required: false
    pattern: "(https?:\/\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\/\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})"
    patternErrorMessage: Must be a valid URL (https://api.obol.tech/dv/0xf...)
    if: { "config_mode": { "enum": ["URL"] } }

  - id: compressed-file-3
    target:
      type: fileUpload
      path: /import/
      service: cluster-3
    title: Compressed file with operator configuration for cluster 3
    description: |
      Provide here the operator 3 configuration generated by `charon create cluster` command in _.tar.xz_ , _.tar.gz_ or _.zip_ format.
    pattern: "(\\.tar.xz|\\.tar.gz|\\.zip)"
    required: false
    if: { "config_mode": { "enum": ["File"] } }

  - id: definition-file-url-4
    target:
      type: environment
      name: DEFINITION_FILE_URL
      service: cluster-4
    title: Definition File URL for DKG ceremony in cluster 4
    description: |
      If charon 4 is already registered as an operator for the DKG ceremony, provide the definition file URL here.
    required: false
    pattern: "(https?:\/\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\/\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})"
    patternErrorMessage: Must be a valid URL (https://api.obol.tech/dv/0xf...)
    if: { "config_mode": { "enum": ["URL"] } }

  - id: compressed-file-4
    target:
      type: fileUpload
      path: /import/
      service: cluster-4
    title: Compressed file with operator configuration for cluster 4
    description: |
      Provide here the operator 4 configuration generated by `charon create cluster` command in _.tar.xz_ , _.tar.gz_ or _.zip_ format.
    pattern: "(\\.tar.xz|\\.tar.gz|\\.zip)"
    required: false
    if: { "config_mode": { "enum": ["File"] } }

  - id: definition-file-url-5
    target:
      type: environment
      name: DEFINITION_FILE_URL
      service: cluster-5
    title: Definition File URL for DKG ceremony in cluster 5
    description: |
      If charon 5 is already registered as an operator for the DKG ceremony, provide the definition file URL here.
    required: false
    pattern: "(https?:\/\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\/\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})"
    patternErrorMessage: Must be a valid URL (https://api.obol.tech/dv/0xf...)
    if: { "config_mode": { "enum": ["URL"] } }

  - id: compressed-file-5
    target:
      type: fileUpload
      path: /import/
      service: cluster-5
    title: Compressed file with operator configuration for cluster 5
    description: |
      Provide here the operator 5 configuration generated by `charon create cluster` command in _.tar.xz_ , _.tar.gz_ or _.zip_ format.
    pattern: "(\\.tar.xz|\\.tar.gz|\\.zip)"
    required: false
    if: { "config_mode": { "enum": ["File"] } }
